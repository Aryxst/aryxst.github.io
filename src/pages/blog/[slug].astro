---
import { type CollectionEntry, getCollection } from 'astro:content';
import { Image } from 'astro:assets';
import { SEO } from 'astro-seo';
import Layout from '../../layouts/Base.astro';
import Container from '../../components/Container.astro';
import Tag from '../../components/Tag.astro';
import '@fontsource/poppins/600.css';
// 400+600

interface Props {
 entry: CollectionEntry<'blog'>;
}
export async function getStaticPaths() {
 const projects = await getCollection('blog');
 return projects.map((entry) => ({
  params: { slug: entry.slug },
  props: { entry },
 }));
}
const { entry } = Astro.props;
const { Content } = await entry.render();
---

<SEO
 title={`${entry.data.title} &mdash; Aryxst`}
 canonical={Astro.url.href}
 description={entry.data.description}
 openGraph={{
  basic: {
   title: entry.data.title,
   type: 'website',
   url: Astro.url.href,
   image: entry.data.thumbnailImage.startsWith('/') ? Astro.url.origin + entry.data.thumbnailImage : entry.data.thumbnailImage || Astro.url.origin + '/aryxst.jpg',
  },
 }}
/>
<Layout title={`${entry.data.title} &mdash; Aryxst`}>
 <Container>
  <h1 class='text-center max-sm:text-3xl'>{entry.data.title}</h1>
  <figure class='select my-12'><Image src={entry.data.thumbnailImage} alt={entry.data.title} width={720} height={405} />{entry.data.image_description && <figcaption class='mt-3 text-center text-sm text-[var(--tw-prose-body)]'>{entry.data.image_description}</figcaption>}</figure>
  {
   entry.data.tags && (
    <div class='mb-16'>
     <h2>Tags</h2>
     <ul class='not-prose flex flex-wrap gap-2'>
      {entry.data.tags.map((tag) => (
       <Tag>{tag}</Tag>
      ))}
     </ul>
    </div>
   )
  }
  <div id='render'><Content /></div>
 </Container>
</Layout>
