---
import { ViewTransitions } from 'astro:transitions';
import '@fontsource/poppins/400.css';
import Navbar from '../components/Navbar.astro';

interface Props {
 title: string;
 noNavbar?: boolean;
}

const { title, noNavbar } = Astro.props;
---

<html lang='en'>
 <head>
  <title>{title}</title>
  <meta charset='UTF-8' />
  <meta name='viewport' content='width=device-width' />
  <link rel='icon' type='image/jpg' href={`${Astro.url.origin}/aryxst-small.jpg`} />
  <meta name='theme-color' content='#49494942' />
  <meta name='generator' content={Astro.generator} />
  <script is:inline defer src='https://analytics.us.umami.is/script.js' data-website-id='92161264-2fa5-42d4-a932-51851f9790bc'></script>
  <ViewTransitions />
 </head>
 <body>
  <slot />
  {!noNavbar && <Navbar />}
  <style is:global>
   :root {
    --bg-default: #0e1217;
    --steel-blue: #343841;
    --off: #12151a;
    --content-height: calc((65ch / 16) * 9);
    --content-width: 65ch;
   }
   body,
   *:after,
   *:before {
    box-sizing: border-box;
   }
   body {
    font-family: 'Poppins', sans-serif;
    color: white;
    background: var(--bg-default);
    margin: 0;
    font-weight: 400;
   }
  </style>
  {
   /* TODO: Add link animation on route change
  <script is:inline>
   document.addEventListener('astro:before-swap', (e) => {
    const path = new URL(location.href).pathname;
    localStorage.setItem('last-path', path);
   });
   document.addEventListener('astro:after-swap', (e) => {
    const previousPath = localStorage.getItem('last-path');
    const currentPath = new URL(location.href).pathname;
    if (previousPath === currentPath) return;
    const navLinks = document.querySelectorAll('.nav-link>a');
    navLinks.forEach((link) => {
     const href = link.getAttribute('href');

     if (previousPath === '/' && href === '/') {
      link.parentElement.setAttribute('data-active', 'true');
      setTimeout(() => {
       link.parentElement.setAttribute('data-active', 'false');
      }, 250);
     } else if (previousPath.includes(href && href !== '/')) {
      link.parentElement.setAttribute('data-active', 'true');
      setTimeout(() => {
       link.parentElement.setAttribute('data-active', 'false');
      }, 250);
     }
    });
   });*/
  }
 </body>
</html>
